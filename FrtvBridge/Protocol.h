#ifndef _PROTOCOL_H_
#define _PROTOCOL_H_
#include <fltUser.h>

#define MINIFLT_EXAMPLE_PORT_NAME "\\FrtvPort"

#define MEMORY_PAGE_SIZE 4096 // Kerenel memory page size

#define FLT_TO_USER_MSG_SIZE (MEMORY_PAGE_SIZE / sizeof(WCHAR)) - (sizeof(DWORD) * 2 / sizeof(WCHAR)) - (sizeof(LONGLONG) / sizeof(WCHAR))
#define FLT_TO_USER_REPLY_MSG_SIZE (MEMORY_PAGE_SIZE / sizeof(WCHAR)) - (sizeof(DWORD) / sizeof(WCHAR))
#define USER_TO_FLT_MSG_SIZE (MEMORY_PAGE_SIZE / sizeof(WCHAR)) - (sizeof(DWORD) * 2 / sizeof(WCHAR)) - (sizeof(LONGLONG) / sizeof(WCHAR))
#define USER_TO_FLT_REPLY_MSG_SIZE (MEMORY_PAGE_SIZE / sizeof(WCHAR)) - (sizeof(DWORD) / sizeof(WCHAR))

typedef enum RTVCMDCODE
{
	RTV_BACKUP_ALERT,
	RTVCMD_FILE_MANUAL_BACKUP,
	RTVCMD_FILE_RESTORE,
	RTVCMD_FILE_DELETE_NORMAL,
	RTVCMD_FILE_DELETE_1PASS,
	RTVCMD_FILE_DELETE_3PASS,
	RTVCMD_FILE_DELETE_7PASS,
	RTV_HEARTBEAT,
	RTVCMD_UPDATE_BACKUP_STORAGE,
	RTVCMD_EXCPATH_ADD,
	RTVCMD_EXCPATH_REMOVE,
	RTVCMD_EXTENSION_ADD,
	RTVCMD_EXTENSION_REMOVE,
	RTVCMD_BACKUP_ON,
	RTVCMD_BACKUP_OFF,
	RTV_DBG_MESSAGE
} RTVCMDCODE;

// TODO: 같은 에러코드를 사용하지 않는다.
// TODO: 커널로부터 온 에러코드를 활용할 수 있도록 한다.
typedef enum RTVCMDRESULT
{
	RTVCMD_SUCCESS,
	RTVCMD_FAIL_INVALID_PARAMETER,
	RTVCMD_FAIL_OUT_OF_MEMORY,
	RTVCMD_FAIL_LONG_STRING
} RTVCMDRESULT;

typedef enum RTVCOMMRESULT
{
	RTV_COMM_SUCCESS,
	RTV_COMM_OUT_OF_MEMORY
} RTVCOMMRESULT;

typedef enum RTVSENDRESULT
{
	RTV_SEND_SUCCESS,
	RTV_SEND_PORT_NULL
} RTVSENDRESULT;

// KERNEL -> USER
// 사용처 : 파일 정보 전송
typedef struct _FLT_TO_USER
{
	DWORD RtvCode;
	WCHAR Msg[FLT_TO_USER_MSG_SIZE];
	DWORD Crc32;
	LONGLONG FileSize;
} FLT_TO_USER, * PFLT_TO_USER;

// KERNEL -> USER REPLY
// 사용처 : DB 백업 결과 알림
typedef struct _FLT_TO_USER_REPLY
{
	DWORD RtvResult;
	WCHAR Msg[FLT_TO_USER_REPLY_MSG_SIZE];
} FLT_TO_USER_REPLY, * PFLT_TO_USER_REPLY;

// USER -> KERNEL
// 사용처 : 설정 추가 및 삭제
typedef struct _USER_TO_FLT
{
	DWORD RtvCode;
	WCHAR Msg[USER_TO_FLT_MSG_SIZE];
	DWORD Crc32;
	LONGLONG FileSize;
} USER_TO_FLT, * PUSER_TO_FLT;

// USER -> KERNEL REPLY
// 사용처 : 설정 업데이트 결과 알림
typedef struct _USER_TO_FLT_REPLY
{
	DWORD RtvResult;
	WCHAR Msg[USER_TO_FLT_REPLY_MSG_SIZE];
} USER_TO_FLT_REPLY, * PUSER_TO_FLT_REPLY;

typedef struct _FLT_TO_USER_WRAPPER {
	FILTER_MESSAGE_HEADER hdr;
	FLT_TO_USER data;
	OVERLAPPED Ovl;
} FLT_TO_USER_WRAPPER, * PFLT_TO_USER_WRAPPER;

typedef struct _FLT_TO_USER_REPLY_WRAPPER {

	FILTER_REPLY_HEADER hdr;
	FLT_TO_USER_REPLY data;

} FLT_TO_USER_REPLY_WRAPPER, * PFLT_TO_USER_REPLY_WRAPPER;

#endif